server:
  port: 8080

spring:
  application:
    name: zhipu-demo
  main:
    allow-bean-definition-overriding: true
  config:
    import: optional:application-secret.yml
  datasource:
    url: jdbc:mysql://localhost:3306/sc6kd_indv_stl_db?useUnicode=true&characterEncoding=utf8&useSSL=false&serverTimezone=Asia/Shanghai
    username: root
    password: ${DB_PASSWORD}
    driver-class-name: com.mysql.cj.jdbc.Driver
    type: com.alibaba.druid.pool.DruidDataSource
    druid:
      # 初始化大小
      initial-size: 5
      # 最小连接池数量
      min-idle: 5
      # 最大连接池数量
      max-active: 20
      # 获取连接时最大等待时间，单位毫秒
      max-wait: 60000
      # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
      time-between-eviction-runs-millis: 60000
      # 配置一个连接在池中最小生存的时间，单位是毫秒
      min-evictable-idle-time-millis: 300000
      # 检测连接是否有效的SQL
      validation-query: SELECT 1
      # 申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效
      test-while-idle: true
      # 申请连接时执行validationQuery检测连接是否有效
      test-on-borrow: false
      # 归还连接时执行validationQuery检测连接是否有效
      test-on-return: false
      # 是否缓存preparedStatement
      pool-prepared-statements: true
      # 配置监控统计拦截的filters，去掉后监控界面sql无法统计
      filters: stat,wall
      # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
      connection-properties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
      # 合并多个DruidDataSource的监控数据
      use-global-data-source-stat: true
      # WebStatFilter配置
      web-stat-filter:
        enabled: true
        url-pattern: /*
        exclusions: '*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*'
      # StatViewServlet配置
      stat-view-servlet:
        enabled: true
        url-pattern: /druid/*
        # 登录名
        login-username: admin
        # 登录密码
        login-password: admin
        # IP白名单(没有配置或者为空，则允许所有访问)
        allow:
        # IP黑名单(存在共同时，deny优先于allow)
        deny:
        # 禁用HTML页面上的"Reset All"功能
        reset-enable: false
    
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL8Dialect
        format_sql: true
  
  mail:
    host: smtp.qq.com
    port: 587
    username: ${MAIL_USER}
    password: ${MAIL_PASS}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
            required: true

# 智普AI 配置
zhipu:
  ai:
    api-key: ${ZHIPU_API_KEY}  # 请填写你的智谱AI API Key
    base-url: https://open.bigmodel.cn/api/paas/v4
    model: glm-4
    model-type: zhipu  # 可选: zhipu, deepseek, tongyi
    use-mock: false  # 设置为true使用模拟服务，false使用真实API

# DeepSeek AI 配置
deepseek:
  api-key: ${DEEPSEEK_API_KEY}  # 请填写你的DeepSeek API Key
  base-url: https://api.deepseek.com
  model: deepseek-chat

# 通义千问 AI 配置
tongyi:
  api-key: ${TONGYI_API_KEY}  # 请填写你的通义千问 API Key
  base-url: https://dashscope.aliyuncs.com
  model: qwen-turbo

# 日志配置已移至 logback-spring.xml

# 股票邮件配置
stock:
  mail:
    to: ${STOCK_MAIL_TO}  # 请填写你的QQ邮箱 

# tushare配置
tushare:
  token: ${TUSHARE_TOKEN}  # 请填写你的tushare token
  
# application.yml
management:
  endpoints:
    web:
      exposure:
        include: startup,health  # 暴露startup和health端点
  endpoint:
    startup:
      enabled: true  # 显式启用startup端点（默认已启用，可省略）